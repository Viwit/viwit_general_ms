openapi: 3.0.1
info:
  description: "This documentation details the services available in this API.  To use the API, the following commands must be executed: `cd General` locating in the internal directory ./General/General `docker build -t viwit-general .` `docker-compose build` `docker-compose up`"
  title: API - Viwit General
  version: v1
servers:
  - url: http://localhost:3000
    description: Production server
  - url: http://localhost:3000
    description: Sandbox server
paths:
  "/Bus":
    get:
      tags:
      - Bus
      responses:
        '200':
          description: Success
    post:
      tags:
      - Bus
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Bus"
          text/json:
            schema:
              "$ref": "#/components/schemas/Bus"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Bus"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Bus"
            application/json:
              schema:
                "$ref": "#/components/schemas/Bus"
            text/json:
              schema:
                "$ref": "#/components/schemas/Bus"
  "/Bus/{licensePlateBus}":
    get:
      tags:
      - Bus
      parameters:
      - name: licensePlateBus
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Bus"
            application/json:
              schema:
                "$ref": "#/components/schemas/Bus"
            text/json:
              schema:
                "$ref": "#/components/schemas/Bus"
    put:
      tags:
      - Bus
      parameters:
      - name: licensePlateBus
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Bus"
          text/json:
            schema:
              "$ref": "#/components/schemas/Bus"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Bus"
      responses:
        '200':
          description: Success
    delete:
      tags:
      - Bus
      parameters:
      - name: licensePlateBus
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
  "/BusStop":
    get:
      tags:
      - BusStop
      responses:
        '200':
          description: Success
    post:
      tags:
      - BusStop
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BusStop"
          text/json:
            schema:
              "$ref": "#/components/schemas/BusStop"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/BusStop"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/BusStop"
            application/json:
              schema:
                "$ref": "#/components/schemas/BusStop"
            text/json:
              schema:
                "$ref": "#/components/schemas/BusStop"
  "/BusStop/{IdBusStop}":
    get:
      tags:
      - BusStop
      parameters:
      - name: IdBusStop
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/BusStop"
            application/json:
              schema:
                "$ref": "#/components/schemas/BusStop"
            text/json:
              schema:
                "$ref": "#/components/schemas/BusStop"
    put:
      tags:
      - BusStop
      parameters:
      - name: IdBusStop
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BusStop"
          text/json:
            schema:
              "$ref": "#/components/schemas/BusStop"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/BusStop"
      responses:
        '200':
          description: Success
    delete:
      tags:
      - BusStop
      parameters:
      - name: IdBusStop
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
  "/Driver":
    get:
      tags:
      - Driver
      responses:
        '200':
          description: Success
    post:
      tags:
      - Driver
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Driver"
          text/json:
            schema:
              "$ref": "#/components/schemas/Driver"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Driver"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Driver"
            application/json:
              schema:
                "$ref": "#/components/schemas/Driver"
            text/json:
              schema:
                "$ref": "#/components/schemas/Driver"
  "/Driver/{DriversLicense}":
    get:
      tags:
      - Driver
      parameters:
      - name: DriversLicense
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Driver"
            application/json:
              schema:
                "$ref": "#/components/schemas/Driver"
            text/json:
              schema:
                "$ref": "#/components/schemas/Driver"
    put:
      tags:
      - Driver
      parameters:
      - name: DriversLicense
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Driver"
          text/json:
            schema:
              "$ref": "#/components/schemas/Driver"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Driver"
      responses:
        '200':
          description: Success
    delete:
      tags:
      - Driver
      parameters:
      - name: DriversLicense
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
  "/Route":
    get:
      tags:
      - Route
      responses:
        '200':
          description: Success
    post:
      tags:
      - Route
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Route"
          text/json:
            schema:
              "$ref": "#/components/schemas/Route"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Route"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Route"
            application/json:
              schema:
                "$ref": "#/components/schemas/Route"
            text/json:
              schema:
                "$ref": "#/components/schemas/Route"
  "/Route/{IdRoute}":
    get:
      tags:
      - Route
      parameters:
      - name: IdRoute
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Route"
            application/json:
              schema:
                "$ref": "#/components/schemas/Route"
            text/json:
              schema:
                "$ref": "#/components/schemas/Route"
    put:
      tags:
      - Route
      parameters:
      - name: IdRoute
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Route"
          text/json:
            schema:
              "$ref": "#/components/schemas/Route"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Route"
      responses:
        '200':
          description: Success
    delete:
      tags:
      - Route
      parameters:
      - name: IdRoute
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
  "/RouteStops":
    get:
      tags:
      - RouteStops
      responses:
        '200':
          description: Success
    post:
      tags:
      - RouteStops
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RouteStops"
          text/json:
            schema:
              "$ref": "#/components/schemas/RouteStops"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/RouteStops"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/RouteStops"
            application/json:
              schema:
                "$ref": "#/components/schemas/RouteStops"
            text/json:
              schema:
                "$ref": "#/components/schemas/RouteStops"
  "/RouteStops/Route/{IdRoute_Route}/BusStop/{IdBusStop_BusStop}":
    get:
      tags:
      - RouteStops
      parameters:
      - name: IdRoute_Route
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: IdBusStop_BusStop
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/RouteStops"
            application/json:
              schema:
                "$ref": "#/components/schemas/RouteStops"
            text/json:
              schema:
                "$ref": "#/components/schemas/RouteStops"
    delete:
      tags:
      - RouteStops
      parameters:
      - name: IdRoute_Route
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: IdBusStop_BusStop
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
  "/RouteStops/{IdRoute_Route}":
    put:
      tags:
      - RouteStops
      parameters:
      - name: IdRoute_Route
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RouteStops"
          text/json:
            schema:
              "$ref": "#/components/schemas/RouteStops"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/RouteStops"
      responses:
        '200':
          description: Success
  "/Trip":
    get:
      tags:
      - Trip
      responses:
        '200':
          description: Success
    post:
      tags:
      - Trip
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Trip"
          text/json:
            schema:
              "$ref": "#/components/schemas/Trip"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Trip"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Trip"
            application/json:
              schema:
                "$ref": "#/components/schemas/Trip"
            text/json:
              schema:
                "$ref": "#/components/schemas/Trip"
  "/Trip/Route/{IdRoute_Route}/LicensePlateBus/{LicensePlateBus_Bus}/DriversLicense/{DriversLicense_Driver}":
    get:
      tags:
      - Trip
      parameters:
      - name: IdRoute_Route
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: LicensePlateBus_Bus
        in: path
        required: true
        schema:
          type: string
      - name: DriversLicense_Driver
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
  "/Trip/{IdTrip}":
    get:
      tags:
      - Trip
      parameters:
      - name: IdTrip
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Trip"
            application/json:
              schema:
                "$ref": "#/components/schemas/Trip"
            text/json:
              schema:
                "$ref": "#/components/schemas/Trip"
    put:
      tags:
      - Trip
      parameters:
      - name: IdTrip
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Trip"
          text/json:
            schema:
              "$ref": "#/components/schemas/Trip"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Trip"
      responses:
        '200':
          description: Success
    delete:
      tags:
      - Trip
      parameters:
      - name: IdTrip
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
components:
  schemas:
    Bus:
      type: object
      properties:
        licensePlateBus:
          type: string
          nullable: true
        model:
          type: string
          nullable: true
        seatedPassengerCapacity:
          type: integer
          format: int32
        standingPassengerCapacity:
          type: integer
          format: int32
      additionalProperties: false
    BusStop:
      type: object
      properties:
        idBusStop:
          type: integer
          format: int32
        nameOrAddressBusStop:
          type: string
          nullable: true
      additionalProperties: false
    Driver:
      type: object
      properties:
        driversLicense:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        driverExperience:
          type: integer
          format: int32
        averageDriverRating:
          type: string
          nullable: true
      additionalProperties: false
    Route:
      type: object
      properties:
        idRoute:
          type: integer
          format: int32
        nameRoute:
          type: string
          nullable: true
        initialBusStop:
          type: string
          nullable: true
        finalBusStop:
          type: string
          nullable: true
        approximateDuration:
          type: string
          nullable: true
      additionalProperties: false
    RouteStops:
      type: object
      properties:
        idRoute_Route:
          type: integer
          format: int32
        idBusStop_BusStop:
          type: integer
          format: int32
      additionalProperties: false
    Trip:
      type: object
      properties:
        idTrip:
          type: string
          nullable: true
        idRoute_Route:
          type: integer
          format: int32
        licensePlateBus_Bus:
          type: string
          nullable: true
        driversLicense_Driver:
          type: string
          nullable: true
        idBusStop_BusStop:
          type: integer
          format: int32
        currentTripOccupation:
          type: integer
          format: int32
        startDate:
          type: string
          nullable: true
        tripStatus:
          type: string
          nullable: true
      additionalProperties: false
